version: '3.7'

services:

  app:
    user: "${UID}:${GID}"
    image: sfx:0.1
    build:
      context: .
      dockerfile: .docker/php/Dockerfile
    expose:
      - 9000
    environment:
      - APP_ENV=${APP_ENV:-dev}
      - COMPOSER_CACHE_DIR=/tmp/
    volumes:
      - ./:/var/www/app/
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
      - ./.docker/php/conf.d/xdebug.ini:/usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
      - ./.docker/php/conf.d/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
    networks:
      - sf-net

  nginx:
    image: nginxinc/nginx-unprivileged:stable
    ports:
      - "${NGINX_PORT:-8080}:80"
    volumes:
      - ".:/var/www/app/"
      - ".docker/nginx/default.conf:/etc/nginx/conf.d/default.conf"
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      - sf-net
    depends_on:
      - app

  database:
    image: postgres:latest
    environment:
      POSTGRES_DB: cinema
      POSTGRES_USER: user
      POSTGRES_PASSWORD: secret
    expose:
      - 5432
    volumes:
      - db-data:/var/lib/postgresql/data_new:rw
      - "/etc/timezone:/etc/timezone:ro"
      - "/etc/localtime:/etc/localtime:ro"
    networks:
      - sf-net
    ports:
      - "5432:5432"

  redis:
    image: redis:6.2
    ports:
      - "6379:6379"

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "8025:8025"

  elasticsearch:
    container_name: elasticsearch
    image: "docker.elastic.co/elasticsearch/elasticsearch:7.12.0"
    environment:
      - "discovery.type=single-node"
      - "bootstrap.memory_lock=true"
      - "ES_JAVA_OPTS=-Xms1G -Xmx1G"
      - "xpack.security.enabled=false"
      - "http.cors.enabled=true"
      - "http.cors.allow-origin=*"
    ports:
      - "9201:9200"
    volumes:
      - elastic_volume:/usr/share/elasticsearch/data

    #gather all logs from different sources and pass them to elastic-search in a proper format
  logstash_cont:
    container_name: logstash_cont
    build: ./.docker/logstash
    #ports:
    #  - 5041:5044
    depends_on:
      - elasticsearch

    #keep track of the symfony log file and send it to elastic search
  filebeats_cont:
    container_name: filebeats_cont
    build: ./.docker/filebeats
    volumes:
      - ./var/log:/var/log/symfony
    depends_on:
      - logstash_cont

  kibana_cont:
    image: docker.elastic.co/kibana/kibana:7.12.0
    container_name: kibana_cont
    ports:
      - "5602:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    networks:
      - sf-net

networks:
  sf-net:

volumes:
  ###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###
  elastic_volume:
